{"version":3,"sources":["authProvider/AuthProvider.tsx","heroesProvider/HeroesProvider.tsx","customHooks/useSpreadContext.ts","components/Navbar/Navbar.tsx","components/Loader/Loader.tsx","helpers/getHeroById.ts","views/HeroDetailScreen/HeroDetailScreen.tsx","components/HeroCardButtons/HeroCardButtons.tsx","components/ProgressBar/ProgressBar.tsx","components/Powerstats/Powerstats.tsx","components/HeroCard/HeroCard.tsx","components/TeamHeroes/TeamHeroes.tsx","helpers/getSumOfAllPowerstats.ts","components/TeamStadistics/TeamStadistics.tsx","views/HomeScreen/HomeScreen.tsx","helpers/getLogInToken.ts","helpers/getUniqueToken.ts","views/LoginScreen/LoginScreen.tsx","components/SearchPaginationControls/SearchPaginationControls.tsx","components/SearchResults/SearchResults.tsx","helpers/getHeroesByName.ts","views/SearchScreen/SearchScreen.tsx","customHooks/usePagination.ts","router/PrivateRoute.tsx","router/PublicRoute.tsx","router/AppRouter.tsx","App.tsx","index.tsx"],"names":["AuthContext","createContext","AuthProvider","children","useState","JSON","parse","window","localStorage","getItem","userToken","setUserToken","useEffect","setItem","stringify","Provider","value","logIn","newToken","logOut","HeroesContext","initState","HeroesProvider","actualTeam","setActualTeam","isTeamFull","length","isAligmentFull","hero","filter","biography","alignment","addHero","prevState","concat","errorHandling","isAbleToAdd","deleteHero","heroId","id","isHeroPartOfTeam","some","useSpreadContext","authState","useContext","heroesState","Navbar","isOpenMenu","setIsOpenMenu","resize","addEventListener","removeEventListener","className","type","onClick","to","isActive","Loader","size","speed","width","height","color","style","borderWidth","toString","borderLeftColor","animationDuration","getHeroById","a","process","url","axios","req","data","Error","HeroDetailScreen","useParams","setHero","isMountedRef","useRef","alert","useAlert","then","heroResponse","current","catch","err","console","error","minHeight","gap","objectFit","maxWidth","maxHeight","src","image","alt","name","work","base","appearance","weight","HeroCardButtons","navigate","useNavigate","info","success","ProgressBar","title","role","Powerstats","stats","powerstats","Object","entries","map","parseValue","parseInt","fontSize","HeroCard","isSearchItem","TeamHeroes","getSumOfAllPowerstats","statsArr","totalPowerstats","intelligence","strength","durability","power","combat","forEach","keys","key","actualValue","nextValue","TeamStadistics","updateSpeciality","teamStats","setTeamStats","teamPhysical","setTeamPhysical","calculateTeamSpeciality","useCallback","allPowerstats","sumOfStats","maxValue","Math","max","values","val","calculatePhysicalStats","totalStats","physicalStats","round","stat","HomeScreen","teamSpeciality","setTeamSpeciality","border","newSpeciality","getLogInToken","userValues","validUser","emailMatch","email","passwordMatch","password","token","Date","now","random","Promise","resolve","reject","LoginScreen","wrongUser","setWrongUser","ac","AbortController","abort","initialValues","validate","errors","notValidEmail","test","onSubmit","touched","htmlFor","placeholder","SearchPaginationControls","goPrevPage","goNextPage","pageNumber","amountOfPages","paddingRight","SearchResults","filtered","areExistingResults","getHeroesByName","heroName","results","SearchScreen","setResults","isLoading","setIsLoading","maxElements","curIndex","nxtIndex","pageState","setPageState","setFiltered","ceil","amountOfElements","scroll","slice","usePagination","search_input","heroes","PrivateRoute","PublicRoute","AppRouter","path","element","App","options","timeout","position","positions","TOP_CENTER","template","AlertTemplate","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.78c03188.chunk.js","sourcesContent":["import { createContext, useEffect, useState } from \"react\";\r\nimport { AuthContextType, ProviderProps } from \"../types/types\";\r\n\r\nexport const AuthContext = createContext({} as AuthContextType);\r\n\r\nexport const AuthProvider = ({ children }: ProviderProps) => {\r\n  const [userToken, setUserToken] = useState(\r\n    JSON.parse(window.localStorage.getItem(\"token\") as string) || null\r\n  );\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"token\", JSON.stringify(userToken));\r\n  }, [userToken]);\r\n\r\n  const logIn = (newToken: string) => {\r\n    setUserToken(newToken);\r\n  };\r\n\r\n  const logOut = () => setUserToken(null);\r\n\r\n  return (\r\n    <AuthContext.Provider value={{ userToken, logIn, logOut }}>\r\n      {children}\r\n    </AuthContext.Provider>\r\n  );\r\n};\r\n","import { createContext, useEffect, useState } from \"react\";\r\nimport { Hero, HeroesContextType, ProviderProps } from \"../types/types\";\r\n\r\nexport const HeroesContext = createContext({} as HeroesContextType);\r\n\r\nconst initState = () =>\r\n  JSON.parse(window.localStorage.getItem(\"actualTeam\") as string) || [];\r\n\r\nexport const HeroesProvider = ({ children }: ProviderProps) => {\r\n  const [actualTeam, setActualTeam] = useState<Hero[]>(initState);\r\n\r\n  useEffect(() => {\r\n    window.localStorage.setItem(\"actualTeam\", JSON.stringify(actualTeam));\r\n  }, [actualTeam]);\r\n\r\n  const isTeamFull: boolean = actualTeam?.length >= 6;\r\n  const isAligmentFull = (hero: Hero): boolean => {\r\n    const quantityMatchingAlignmentHeroes = actualTeam.filter(\r\n      ({ biography }) => biography.alignment === hero.biography.alignment\r\n    ).length;\r\n    return quantityMatchingAlignmentHeroes >= 3;\r\n  };\r\n\r\n  const errorHandling = (hero: Hero): string => {\r\n    const alignment = hero.biography.alignment;\r\n    if (isAligmentFull(hero))\r\n      return `Your team already has 3 ${alignment} characters`;\r\n    else if (isTeamFull) return \"Your team is full\";\r\n    return \"Unknown error\";\r\n  };\r\n\r\n  const isAbleToAdd = (hero: Hero): boolean => {\r\n    return !isTeamFull && !isAligmentFull(hero);\r\n  };\r\n\r\n  const addHero = (hero: Hero) =>\r\n    setActualTeam((prevState) => prevState.concat(hero));\r\n\r\n  const deleteHero = (heroId: Hero[\"id\"]) =>\r\n    setActualTeam((prevState) => prevState.filter(({ id }) => id !== heroId));\r\n\r\n  const isHeroPartOfTeam = (heroId: Hero[\"id\"]) =>\r\n    actualTeam.some(({ id }) => id === heroId);\r\n\r\n  const value = {\r\n    actualTeam,\r\n    addHero,\r\n    errorHandling,\r\n    isAbleToAdd,\r\n    deleteHero,\r\n    isHeroPartOfTeam,\r\n  };\r\n\r\n  return (\r\n    <HeroesContext.Provider value={value}>{children}</HeroesContext.Provider>\r\n  );\r\n};\r\n","import { useContext } from \"react\";\r\nimport { AuthContext } from \"../authProvider/AuthProvider\";\r\nimport { HeroesContext } from \"../heroesProvider/HeroesProvider\";\r\nimport { AuthContextType, HeroesContextType } from \"../types/types\";\r\n\r\ntype FusedContext = HeroesContextType & AuthContextType;\r\n\r\nconst useSpreadContext = (): FusedContext => {\r\n  const authState = useContext(AuthContext);\r\n  const heroesState = useContext(HeroesContext);\r\n  return { ...authState, ...heroesState };\r\n};\r\n\r\nexport default useSpreadContext;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport { NavLink } from \"react-router-dom\";\r\nimport useSpreadContext from \"../../customHooks/useSpreadContext\";\r\n\r\nconst Navbar = () => {\r\n  const { logOut, userToken } = useSpreadContext();\r\n  const [isOpenMenu, setIsOpenMenu] = useState<boolean>(false);\r\n\r\n  useEffect(() => {\r\n    const resize = (): void => {\r\n      setIsOpenMenu(false);\r\n    };\r\n    resize();\r\n    window.addEventListener(\"resize\", resize);\r\n    return () => {\r\n      window.removeEventListener(\"resize\", resize);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <header className=\"bg-danger \">\r\n      <nav className=\"navbar navbar-expand-md  px-2 navbar-dark \">\r\n        <div className=\"navbar-brand\">\r\n          <h3 className=\"text-white\">Heroes App</h3>\r\n        </div>\r\n\r\n        {userToken && (\r\n          <div>\r\n            <button\r\n              className=\"navbar-toggler\"\r\n              type=\"button\"\r\n              aria-controls=\"navbarToggleExternalContent\"\r\n              aria-expanded=\"false\"\r\n              aria-label=\"Toggle navigation\"\r\n              onClick={() => setIsOpenMenu(!isOpenMenu)}\r\n            >\r\n              <span className=\"navbar-toggler-icon\"></span>\r\n            </button>\r\n            <div\r\n              className=\"collapse navbar-collapse \"\r\n              id=\"navbarToggleExternalContent\"\r\n            >\r\n              <div className=\"navbar-nav\">\r\n                <NavLink\r\n                  to=\"/\"\r\n                  className={({ isActive }) =>\r\n                    isActive ? \"nav-item nav-link active\" : \"nav-item nav-link\"\r\n                  }\r\n                >\r\n                  Actual Team\r\n                </NavLink>\r\n                <NavLink to=\"/search\" className=\"nav-item nav-link\">\r\n                  Search\r\n                </NavLink>\r\n                <button onClick={logOut} className=\"btn nav-item text-white\">\r\n                  Log Out\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        )}\r\n      </nav>\r\n      {userToken && isOpenMenu && (\r\n        <div className=\"navbar-nav text-center\">\r\n          <NavLink\r\n            to=\"/\"\r\n            onClick={() => setIsOpenMenu(false)}\r\n            className={({ isActive }) =>\r\n              isActive\r\n                ? \"nav-link text-white text-muted fw-bold\"\r\n                : \"  nav-link text-white \"\r\n            }\r\n          >\r\n            Actual Team\r\n          </NavLink>\r\n          <NavLink\r\n            to=\"/search\"\r\n            onClick={() => setIsOpenMenu(false)}\r\n            className={({ isActive }) =>\r\n              isActive\r\n                ? \"nav-link text-white text-muted fw-bold\"\r\n                : \"  nav-link text-white \"\r\n            }\r\n          >\r\n            Search\r\n          </NavLink>\r\n          <button onClick={logOut} className=\"btn  nav-link text-white\">\r\n            Log Out\r\n          </button>\r\n        </div>\r\n      )}\r\n    </header>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import \"./Loader.scss\";\r\n\r\ninterface props {\r\n  size?: string;\r\n  speed?: string;\r\n  width?: string;\r\n  height?: string;\r\n  color: string;\r\n}\r\n\r\nconst Loader: React.FC<props> = ({\r\n  size = \"4px\",\r\n  speed = \"1s\",\r\n  width = \"36px\",\r\n  height = \"36px\",\r\n  color,\r\n}) => {\r\n  return (\r\n    <div className=\"container\">\r\n      <div\r\n        className=\"loader\"\r\n        style={{\r\n          borderWidth: size.toString(),\r\n          width: width.toString(),\r\n          height: height.toString(),\r\n          borderLeftColor: color,\r\n          animationDuration: speed.toString(),\r\n        }}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Loader;\r\n","import axios from \"axios\";\r\nimport { Hero } from \"../types/types\";\r\n\r\nexport const getHeroById = async (id: string): Promise<Hero> => {\r\n  try {\r\n    let token = process.env.REACT_APP_HEROES_API_TOKEN;\r\n\r\n    let url = `https://superheroapi.com/api.php/${token}/${id}`;\r\n    const req = await axios(url);\r\n    const { data } = req;\r\n    return data;\r\n  } catch (err: any) {\r\n    throw new Error(err);\r\n  }\r\n};\r\n","import { useEffect, useRef, useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useParams } from \"react-router\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport { getHeroById } from \"../../helpers/getHeroById\";\r\nimport { Hero } from \"../../types/types\";\r\n\r\nconst HeroDetailScreen = () => {\r\n  const { id = \"1\" } = useParams();\r\n  const [hero, setHero] = useState<Hero>();\r\n  const isMountedRef = useRef(true);\r\n  const alert = useAlert();\r\n\r\n  useEffect(() => {\r\n    getHeroById(id)\r\n      .then((heroResponse) => {\r\n        if (isMountedRef.current && heroResponse) {\r\n          setHero(heroResponse);\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        alert.error(\"An error occurred, more info in the browser console\");\r\n      });\r\n\r\n    return () => {\r\n      isMountedRef.current = false;\r\n    };\r\n  }, [id, alert]);\r\n\r\n  return (\r\n    <section\r\n      style={{ minHeight: \"80vh\" }}\r\n      className=\"d-flex w-100 justify-content-center align-items-center \"\r\n    >\r\n      {hero ? (\r\n        <div\r\n          style={{ gap: \"2rem\" }}\r\n          className=\"d-flex flex-column flex-md-row justify-content-center align-items-center\"\r\n        >\r\n          <img\r\n            style={{\r\n              objectFit: \"cover\",\r\n              maxWidth: \"100%\",\r\n              maxHeight: \"25rem\",\r\n            }}\r\n            src={hero?.image.url}\r\n            alt={hero?.name}\r\n          />\r\n          <div className=\"px-4 \" style={{ maxWidth: \"37.5rem\" }}>\r\n            <h2 className=\"text-danger display-4 fw-bold\">\r\n              Hello {hero?.name}\r\n            </h2>\r\n\r\n            <p className=\" text-muted\"> {hero?.biography[\"alter-egos\"]}</p>\r\n            <p>\r\n              <span className=\"fw-bold\">Secret Identity: </span>\r\n              {hero?.biography[\"full-name\"]}\r\n            </p>\r\n            <p className=\"text-capitalize\">\r\n              <span className=\"fw-bold\">Alignment: </span>\r\n              {hero?.biography[\"alignment\"]}\r\n            </p>\r\n            <p style={{ maxWidth: \"50%\" }} className=\"text-wrap\">\r\n              <span className=\"fw-bold\">Base: </span>\r\n              {hero?.work.base}\r\n            </p>\r\n            <p>\r\n              <span className=\"fw-bold\">Height: </span>\r\n              {hero?.appearance.height[1]}\r\n            </p>\r\n            <p>\r\n              <span className=\"fw-bold\">Weight: </span>\r\n              {hero?.appearance.weight[1]}\r\n            </p>\r\n            <p>\r\n              <span className=\"fw-bold\">Hair Color: </span>\r\n              {hero?.appearance[\"hair-color\"]}\r\n            </p>\r\n            <p>\r\n              <span className=\"fw-bold\">Eye Color: </span>\r\n              {hero?.appearance[\"eye-color\"]}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      ) : (\r\n        <Loader size=\"1rem\" width=\"15rem\" height=\"15rem\" color=\"red\" />\r\n      )}\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HeroDetailScreen;\r\n","import { useAlert } from \"react-alert\";\r\nimport { useNavigate } from \"react-router\";\r\nimport useSpreadContext from \"../../customHooks/useSpreadContext\";\r\nimport { Hero } from \"../../types/types\";\r\n\r\ninterface props {\r\n  hero: Hero;\r\n}\r\nconst HeroCardButtons: React.FC<props> = ({ hero }) => {\r\n  const { deleteHero, addHero, isHeroPartOfTeam, isAbleToAdd, errorHandling } =\r\n    useSpreadContext();\r\n  const alert = useAlert();\r\n  const navigate = useNavigate();\r\n\r\n  const addNewHero = (): void => {\r\n    if (isAbleToAdd(hero)) {\r\n      addHero(hero);\r\n      alert.success(`${hero.name} has been successfully added!`);\r\n    } else alert.error(errorHandling(hero));\r\n  };\r\n\r\n  const removeHero = (): void => {\r\n    deleteHero(hero.id);\r\n    alert.info(`${hero.name} has been successfully removed!`);\r\n  };\r\n\r\n  return (\r\n    <div className=\"mt-2 d-flex justify-content-around\">\r\n      {isHeroPartOfTeam(hero.id) ? (\r\n        <button onClick={removeHero} className=\"btn btn-danger\">\r\n          Remove\r\n        </button>\r\n      ) : (\r\n        <button onClick={addNewHero} className=\"btn btn-primary\">\r\n          Add\r\n        </button>\r\n      )}\r\n      <button\r\n        onClick={() => navigate(`/hero/${hero.id}`)}\r\n        className=\"btn btn-success\"\r\n      >\r\n        Details\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroCardButtons;\r\n","interface props {\r\n  value: string;\r\n}\r\n\r\nconst ProgressBar: React.FC<props> = ({ value }) => {\r\n  return (\r\n    <div\r\n      style={{ maxWidth: \"100%\", height: \".5rem\" }}\r\n      className=\" progress flex-grow-1 mx-2  \"\r\n    >\r\n      <div\r\n        title={value}\r\n        className=\"progress-bar-animated progress-bar text-black progress-bar-striped bg-danger\"\r\n        role=\"progressbar\"\r\n        style={{ width: `${value}%` }}\r\n        aria-valuenow={0}\r\n        aria-valuemin={0}\r\n        aria-valuemax={100}\r\n      ></div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ProgressBar;\r\n","import ProgressBar from \"../ProgressBar/ProgressBar\";\r\nimport { PowerstatsType } from \"../../types/types\";\r\n\r\nexport interface props {\r\n  stats: PowerstatsType;\r\n}\r\n\r\nconst Powerstats: React.FC<props> = ({ stats }) => {\r\n  const powerstats: [string, string][] = Object.entries(stats);\r\n  return (\r\n    <div className=\"stats\">\r\n      {powerstats?.map(([name, value]) => {\r\n        const parseValue: string = parseInt(value) ? value : \"0\";\r\n        return (\r\n          <div\r\n            style={{ fontSize: \".8rem\" }}\r\n            key={name}\r\n            className=\"d-flex align-items-center \"\r\n          >\r\n            <span className=\"\">{parseValue}</span>\r\n\r\n            <ProgressBar value={parseValue} />\r\n\r\n            <span className=\"  text-capitalize \">{name}</span>\r\n          </div>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Powerstats;\r\n","import HeroCardButtons from \"../HeroCardButtons/HeroCardButtons\";\r\nimport { Hero } from \"../../types/types\";\r\nimport Powerstats from \"../Powerstats/Powerstats\";\r\n\r\ninterface props {\r\n  hero: Hero;\r\n  isSearchItem?: boolean;\r\n}\r\n\r\nconst HeroCard: React.FC<props> = ({ hero, isSearchItem = false }) => {\r\n  const { name, image, powerstats } = hero;\r\n\r\n  return (\r\n    <div className=\"my-2 \">\r\n      <article style={{ maxWidth: 200 }} className=\"card d-flex\">\r\n        <img\r\n          className=\" img-thumbnail\"\r\n          style={{ objectFit: \"cover\", height: \"15rem\", width: \"15rem\" }}\r\n          src={image?.url}\r\n          alt={name}\r\n        />\r\n\r\n        <div className=\"card-body my-2\">\r\n          <h5 className=\"card-title text-center  \">{name}</h5>\r\n          {!isSearchItem && <Powerstats stats={powerstats} />}\r\n          <HeroCardButtons hero={hero} />\r\n        </div>\r\n      </article>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HeroCard;\r\n","import { Hero } from \"../../types/types\";\r\nimport HeroCard from \"../HeroCard/HeroCard\";\r\n\r\ninterface props {\r\n  actualTeam: Hero[];\r\n}\r\n\r\nconst TeamHeroes: React.FC<props> = ({ actualTeam }) => {\r\n  return (\r\n    <div\r\n      style={{ gap: \"1rem\" }}\r\n      className=\" justify-content-center d-flex flex-wrap m-auto\"\r\n    >\r\n      {actualTeam?.map((hero: Hero) => (\r\n        <HeroCard key={hero.id} hero={hero} />\r\n      ))}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamHeroes;\r\n","import { PowerstatsType } from \"../types/types\";\r\n\r\nexport const updateSkill = (actualValue: string, nextValue: string): string =>\r\n  (parseInt(actualValue) + (parseInt(nextValue) || 0)).toString();\r\n\r\nexport const getSumOfAllPowerstats = (\r\n  statsArr: PowerstatsType[]\r\n): PowerstatsType => {\r\n  let totalPowerstats: PowerstatsType = {\r\n    intelligence: \"0\",\r\n    strength: \"0\",\r\n    speed: \"0\",\r\n    durability: \"0\",\r\n    power: \"0\",\r\n    combat: \"0\",\r\n  };\r\n\r\n  statsArr.forEach((stats) => {\r\n    Object.keys(totalPowerstats).forEach((key) => {\r\n      totalPowerstats[key] = updateSkill(totalPowerstats[key], stats[key]);\r\n    });\r\n  });\r\n\r\n  return totalPowerstats;\r\n};\r\n","import React, { useCallback, useEffect, useState } from \"react\";\r\nimport { getSumOfAllPowerstats } from \"../../helpers/getSumOfAllPowerstats\";\r\nimport { Hero, PowerstatsType } from \"../../types/types\";\r\n\r\ninterface props {\r\n  actualTeam: Hero[];\r\n  updateSpeciality: (newSpeciality: string) => void;\r\n}\r\n\r\ninterface PhysicalStats {\r\n  height: number;\r\n  weight: number;\r\n}\r\n\r\nconst TeamStadistics: React.FC<props> = ({ actualTeam, updateSpeciality }) => {\r\n  const [teamStats, setTeamStats] = useState<PowerstatsType>({\r\n    intelligence: \"0\",\r\n    strength: \"0\",\r\n    speed: \"0\",\r\n    durability: \"0\",\r\n    power: \"0\",\r\n    combat: \"0\",\r\n  });\r\n  const [teamPhysical, setTeamPhysical] = useState<PhysicalStats>({\r\n    height: 0,\r\n    weight: 0,\r\n  });\r\n\r\n  const calculateTeamSpeciality = useCallback((): void => {\r\n    const allPowerstats: PowerstatsType[] = actualTeam.map(\r\n      (hero) => hero?.powerstats\r\n    );\r\n\r\n    let sumOfStats: PowerstatsType = getSumOfAllPowerstats(allPowerstats);\r\n\r\n    let maxValue: number = Math.max(\r\n      ...Object.values(sumOfStats).map((val) => parseInt(val))\r\n    );\r\n\r\n    Object.keys(sumOfStats).forEach((key) => {\r\n      if (sumOfStats[key] === maxValue.toString()) updateSpeciality(key);\r\n    });\r\n\r\n    if (!actualTeam.length || !maxValue) updateSpeciality(\"None\");\r\n    setTeamStats(sumOfStats);\r\n  }, [actualTeam, updateSpeciality]);\r\n\r\n  const calculatePhysicalStats = useCallback((): void => {\r\n    let totalStats: PhysicalStats = {\r\n      height: 0,\r\n      weight: 0,\r\n    };\r\n\r\n    const physicalStats: PhysicalStats[] = actualTeam?.map(({ appearance }) => {\r\n      return {\r\n        height: parseInt(appearance.height[1]),\r\n        weight: parseInt(appearance.weight[1]),\r\n      };\r\n    });\r\n\r\n    for (let hero of physicalStats) {\r\n      totalStats = {\r\n        height: totalStats.height + hero.height,\r\n        weight: totalStats.weight + hero.weight,\r\n      };\r\n    }\r\n\r\n    totalStats = {\r\n      height: Math.round(totalStats.height / physicalStats.length) || 0,\r\n      weight: Math.round(totalStats.weight / physicalStats.length) || 0,\r\n    };\r\n\r\n    setTeamPhysical(totalStats);\r\n  }, [actualTeam]);\r\n\r\n  useEffect(() => {\r\n    calculateTeamSpeciality();\r\n    calculatePhysicalStats();\r\n  }, [actualTeam, calculatePhysicalStats, calculateTeamSpeciality]);\r\n\r\n  return (\r\n    <div className=\"bg-danger my-4 border border-2 border-danger rounded p-4 text-white\">\r\n      <h2>TEAM STADISTICS</h2>\r\n      <div className=\"d-flex flex-wrap  \">\r\n        <div>\r\n          <h4 className=\"m-2\">POWERSTATS</h4>\r\n\r\n          <div className=\"d-flex flex-wrap justify-content-center m-2 align-items-center\">\r\n            {Object.entries(teamStats)?.map(([stat, val]) => {\r\n              let parseValue = parseInt(val) ? val : \"0\";\r\n              return (\r\n                <div key={stat} className=\"m-2\">\r\n                  <h4 className=\"text-capitalize fw-bold\">{stat}</h4>\r\n\r\n                  <h4 className=\"fw-light\">{parseValue}</h4>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n        <div className=\"m-auto\">\r\n          <h4>PHYSICAL</h4>\r\n          <div className=\"d-flex flex-wrap  justify-content-between \">\r\n            <div className=\"m-2\">\r\n              <h4 className=\"fw-bold \">Height</h4>\r\n              <h4 className=\"fw-light\">{teamPhysical.height + \"cm\"}</h4>\r\n            </div>\r\n            <div className=\"m-2\">\r\n              <h4 className=\"fw-bold \">Weight</h4>\r\n              <h4 className=\"fw-light\">{teamPhysical.weight + \"kg\"}</h4>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TeamStadistics;\r\n","import { useState } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport TeamHeroes from \"../../components/TeamHeroes/TeamHeroes\";\r\nimport TeamStadistics from \"../../components/TeamStadistics/TeamStadistics\";\r\nimport useSpreadContext from \"../../customHooks/useSpreadContext\";\r\n\r\nconst HomeScreen = () => {\r\n  const navigate = useNavigate();\r\n  const { actualTeam } = useSpreadContext();\r\n  const [teamSpeciality, setTeamSpeciality] = useState<string>(\"\");\r\n\r\n  const updateSpeciality = (newSpeciality: string): void => {\r\n    setTeamSpeciality(newSpeciality);\r\n  };\r\n\r\n  return (\r\n    <section style={{ maxWidth: \"95%\" }} className=\" text-center m-auto\">\r\n      <div>\r\n        <h3 className=\"text-danger fw-bold\">ACTUAL TEAM</h3>\r\n        <h6 className=\"text-danger fw-bold text-uppercase\">\r\n          TEAM SPECIALITY: {teamSpeciality}\r\n        </h6>\r\n      </div>\r\n\r\n      <div\r\n        style={{ minHeight: 300, border: \"5px dashed #444\" }}\r\n        className=\"d-flex  justify-content-center align-items-center my-4\"\r\n      >\r\n        {actualTeam.length > 0 ? (\r\n          <TeamHeroes actualTeam={actualTeam} />\r\n        ) : (\r\n          <div>\r\n            <h2 className=\"display-3 fw-bold\">TEAM EMPTY</h2>\r\n            <button\r\n              onClick={() => navigate(\"/search\")}\r\n              className=\"btn btn-primary fw-bold\"\r\n            >\r\n              Search New Heroes\r\n            </button>\r\n          </div>\r\n        )}\r\n      </div>\r\n      <TeamStadistics\r\n        actualTeam={actualTeam}\r\n        updateSpeciality={updateSpeciality}\r\n      />\r\n    </section>\r\n  );\r\n};\r\n\r\nexport default HomeScreen;\r\n","import { FormValues } from \"../types/types\";\r\nimport { getUniqueToken } from \"./getUniqueToken\";\r\n\r\nexport const getLogInToken = (userValues: FormValues) => {\r\n  const validUser: FormValues = {\r\n    email: \"challenge@alkemy.org\",\r\n    password: \"react\",\r\n  };\r\n\r\n  const emailMatch = validUser.email === userValues.email;\r\n  const passwordMatch = validUser.password === userValues.password;\r\n\r\n  if (emailMatch && passwordMatch) {\r\n    const token = getUniqueToken();\r\n    return Promise.resolve(token);\r\n  }\r\n\r\n  return Promise.reject(\"Wrong User\");\r\n};\r\n","export const getUniqueToken = (): string => {\r\n  const head = Date.now().toString(32);\r\n  const body = Math.random().toString(32);\r\n\r\n  return head + body;\r\n};\r\n","import { Formik, Field, Form } from \"formik\";\r\nimport { useEffect, useState } from \"react\";\r\nimport { useAlert } from \"react-alert\";\r\nimport { useNavigate } from \"react-router\";\r\nimport useSpreadContext from \"../../customHooks/useSpreadContext\";\r\nimport { getLogInToken } from \"../../helpers/getLogInToken\";\r\nimport { Errors, FormValues } from \"../../types/types\";\r\n\r\nconst LoginScreen = () => {\r\n  const [wrongUser, setWrongUser] = useState<boolean>(false);\r\n  const { logIn } = useSpreadContext();\r\n  const navigate = useNavigate();\r\n  const alert = useAlert();\r\n\r\n  const validate = (values: FormValues): Errors => {\r\n    const errors = {} as Errors;\r\n    const notValidEmail = !/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(\r\n      values.email\r\n    );\r\n\r\n    if (!values.email) {\r\n      errors.email = \"Required\";\r\n    } else if (notValidEmail) {\r\n      errors.email = \"Invalid email address\";\r\n    }\r\n\r\n    if (!values.password) {\r\n      errors.password = \"Required\";\r\n    } else if (values.password.length > 16) {\r\n      errors.password = \"Password too long\";\r\n    } else if (values.password.length < 2) {\r\n      errors.password = \"Password too short\";\r\n    }\r\n\r\n    return errors;\r\n  };\r\n\r\n  const handleSubmit = (values: FormValues) => {\r\n    getLogInToken(values)\r\n      .then((token) => {\r\n        if (token) {\r\n          logIn(token);\r\n          setWrongUser(false);\r\n          navigate(\"/\");\r\n        }\r\n      })\r\n      .catch((err) => {\r\n        console.error(err);\r\n        alert.error(\"LogIn error, please see the console for more info \");\r\n        setWrongUser(true);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const ac = new AbortController();\r\n    return () => ac.abort();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"bg-danger min-vh-100  text-white d-flex justify-content-md-evenly justify-content-center align-items-center flex-column flex-md-row\">\r\n      <article className=\"text-center  mb-2\">\r\n        <h1 className=\"fw-bold\">Welcome to my Heroes App</h1>\r\n        <h3 className=\"fw-light\">Please Log In</h3>\r\n      </article>\r\n      <Formik\r\n        initialValues={{\r\n          email: \"\",\r\n          password: \"\",\r\n        }}\r\n        validate={validate}\r\n        onSubmit={handleSubmit}\r\n      >\r\n        {({ errors, touched }) => (\r\n          <Form className=\"p-4 bg-white text-black rounded\">\r\n            <h3 className=\"mb-4\">Log In</h3>\r\n            <div className=\"form-group mb-4\">\r\n              <label htmlFor=\"email\" className=\"mb-2\">\r\n                Email\r\n              </label>\r\n              <Field\r\n                id=\"email\"\r\n                name=\"email\"\r\n                className=\"form-control\"\r\n                placeholder=\"jane@acme.com\"\r\n                type=\"email\"\r\n              />\r\n              {errors.email && touched.email && (\r\n                <span className=\"text-danger\">{errors.email}</span>\r\n              )}\r\n            </div>\r\n            <div className=\"form-group mb-4\">\r\n              <label htmlFor=\"password\" className=\"mb-2\">\r\n                Password\r\n              </label>\r\n              <Field\r\n                type=\"password\"\r\n                id=\"password\"\r\n                className=\"form-control\"\r\n                name=\"password\"\r\n                placeholder=\"*****\"\r\n              />\r\n              {errors.password && touched.password && (\r\n                <span className=\"text-danger\">{errors.password}</span>\r\n              )}\r\n            </div>\r\n\r\n            <div className=\"d-flex justify-content-between align-items-center\">\r\n              <button type=\"submit\" className=\"btn btn-success\">\r\n                Log In\r\n              </button>\r\n              {wrongUser && <span className=\"text-danger\">Wrong User</span>}\r\n            </div>\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LoginScreen;\r\n","import React from \"react\";\r\n\r\ninterface props {\r\n  goPrevPage: () => void;\r\n  goNextPage: () => void;\r\n  pageNumber: number;\r\n  amountOfPages: number;\r\n}\r\n\r\nconst SearchPaginationControls: React.FC<props> = ({\r\n  goPrevPage,\r\n  goNextPage,\r\n  pageNumber,\r\n  amountOfPages,\r\n}) => {\r\n  return (\r\n    <div\r\n      style={{ paddingRight: 20 }}\r\n      className=\"d-flex justify-content-between w-100\"\r\n    >\r\n      <button onClick={goPrevPage} className=\"btn btn-dark\">\r\n        Previous\r\n      </button>\r\n      <h3 className=\"fw-bold \">\r\n        {pageNumber} of {amountOfPages}\r\n      </h3>\r\n      <button onClick={goNextPage} className=\"btn btn-dark\">\r\n        Next\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchPaginationControls;\r\n","import React from \"react\";\r\nimport { Hero } from \"../../types/types\";\r\nimport HeroCard from \"../HeroCard/HeroCard\";\r\n\r\nimport SearchPaginationControls from \"../SearchPaginationControls/SearchPaginationControls\";\r\n\r\ninterface props {\r\n  filtered: Hero[];\r\n  goPrevPage: () => void;\r\n  goNextPage: () => void;\r\n  pageNumber: number;\r\n  amountOfPages: number;\r\n}\r\n\r\nconst SearchResults: React.FC<props> = ({\r\n  filtered,\r\n  goPrevPage,\r\n  goNextPage,\r\n  pageNumber,\r\n  amountOfPages,\r\n}) => {\r\n  const areExistingResults: boolean = filtered?.length > 0;\r\n\r\n  return (\r\n    <>\r\n      <section className=\"justify-content-center  d-flex flex-wrap m-auto\">\r\n        {filtered?.map((hero) => (\r\n          <HeroCard key={hero.id} hero={hero} isSearchItem={true} />\r\n        ))}\r\n      </section>\r\n      {areExistingResults && (\r\n        <SearchPaginationControls\r\n          goNextPage={goNextPage}\r\n          goPrevPage={goPrevPage}\r\n          pageNumber={pageNumber}\r\n          amountOfPages={amountOfPages}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default SearchResults;\r\n","import axios from \"axios\";\r\nimport { Hero } from \"../types/types\";\r\n\r\nexport const getHeroesByName = async (heroName: string): Promise<Hero[]> => {\r\n  try {\r\n    let token = process.env.REACT_APP_HEROES_API_TOKEN;\r\n    let url = `https://superheroapi.com/api.php/${token}/search/${heroName}`;\r\n    const req = await axios(url);\r\n    const { data } = req;\r\n    return data.results;\r\n  } catch (err: any) {\r\n    throw new Error(err);\r\n  }\r\n};\r\n","import { Field, Form, Formik } from \"formik\";\r\nimport { useState } from \"react\";\r\nimport Loader from \"../../components/Loader/Loader\";\r\nimport SearchResults from \"../../components/SearchResults/SearchResults\";\r\nimport { usePagination } from \"../../customHooks/usePagination\";\r\nimport { getHeroesByName } from \"../../helpers/getHeroesByName\";\r\nimport { Hero, ErrorMessage } from \"../../types/types\";\r\n\r\ninterface FormData {\r\n  search_input: string;\r\n}\r\n\r\nconst SearchScreen = () => {\r\n  const [results, setResults] = useState<Hero[]>([]);\r\n  const [isLoading, setIsLoading] = useState<boolean>(false);\r\n  const { filtered, goPrevPage, goNextPage, pageNumber, amountOfPages } =\r\n    usePagination(results, 12);\r\n\r\n  const validate = (value: string): ErrorMessage => {\r\n    if (!value) return \"Input Required\";\r\n    return \"\";\r\n  };\r\n\r\n  const handleSubmit = (values: FormData) => {\r\n    setIsLoading(true);\r\n    setResults([]);\r\n    getHeroesByName(values.search_input)\r\n      .then((heroes) => {\r\n        if (heroes) {\r\n          setIsLoading(false);\r\n          setResults(heroes);\r\n        } else setIsLoading(false);\r\n      })\r\n      .catch((err) => console.error(err));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Formik onSubmit={handleSubmit} initialValues={{ search_input: \"\" }}>\r\n        {({ errors, touched }) => (\r\n          <Form className=\"text-center\">\r\n            <h2 className=\"py-3\">Search your Heroes</h2>\r\n\r\n            <div className=\"form-group d-flex mx-2\">\r\n              <Field\r\n                placeholder=\"Search your hero\"\r\n                id=\"search_input\"\r\n                name=\"search_input\"\r\n                className=\"form-control\"\r\n                validate={validate}\r\n              />\r\n\r\n              <button className=\"btn btn-success mx-2\">Search</button>\r\n            </div>\r\n            {errors.search_input && touched.search_input && (\r\n              <span className=\"text-danger fs-2 px-2\">\r\n                {errors.search_input}\r\n              </span>\r\n            )}\r\n          </Form>\r\n        )}\r\n      </Formik>\r\n\r\n      <div className=\"container mt-4\">\r\n        {!isLoading ? (\r\n          filtered?.length > 0 ? (\r\n            <SearchResults\r\n              filtered={filtered}\r\n              pageNumber={pageNumber}\r\n              amountOfPages={amountOfPages}\r\n              goNextPage={goNextPage}\r\n              goPrevPage={goPrevPage}\r\n            />\r\n          ) : (\r\n            <h2 className=\"text-center text-danger display-2\">\r\n              No Search Results\r\n            </h2>\r\n          )\r\n        ) : (\r\n          <Loader size=\"1rem\" width=\"15rem\" height=\"15rem\" color=\"red\" />\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default SearchScreen;\r\n","import { useEffect, useState } from \"react\";\r\n\r\ninterface PageState {\r\n  curIndex: number;\r\n  nxtIndex: number;\r\n  pageNumber: number;\r\n}\r\n\r\nexport const usePagination = <T>(initState: T[] = [], maxElements: number) => {\r\n  const [pageState, setPageState] = useState<PageState>({\r\n    curIndex: 0,\r\n    nxtIndex: maxElements,\r\n    pageNumber: 1,\r\n  });\r\n  const [filtered, setFiltered] = useState<T[]>(initState);\r\n\r\n  const { curIndex, nxtIndex, pageNumber } = pageState;\r\n\r\n  const amountOfPages = Math.ceil(initState.length / maxElements);\r\n  const amountOfElements =\r\n    pageNumber * maxElements > initState.length\r\n      ? initState.length\r\n      : pageNumber * maxElements;\r\n\r\n  useEffect(() => {\r\n    const resetPagination = () => {\r\n      setPageState({\r\n        curIndex: 0,\r\n        nxtIndex: maxElements,\r\n        pageNumber: 1,\r\n      });\r\n    };\r\n    resetPagination();\r\n  }, [initState, maxElements]);\r\n\r\n  const goNextPage = () => {\r\n    if (curIndex + maxElements < initState.length) {\r\n      setPageState({\r\n        curIndex: curIndex + maxElements,\r\n        nxtIndex: nxtIndex + maxElements,\r\n        pageNumber: pageNumber + 1,\r\n      });\r\n      window.scroll(0, 0);\r\n    }\r\n  };\r\n\r\n  const goPrevPage = () => {\r\n    if (curIndex > 0) {\r\n      setPageState({\r\n        curIndex: curIndex - maxElements,\r\n        nxtIndex: nxtIndex - maxElements,\r\n        pageNumber: pageNumber - 1,\r\n      });\r\n      window.scroll(0, 0);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    const filtered = initState.slice(curIndex, nxtIndex);\r\n    setFiltered(filtered);\r\n  }, [initState, pageNumber, curIndex, nxtIndex, maxElements]);\r\n\r\n  return {\r\n    filtered,\r\n    amountOfElements,\r\n    pageNumber,\r\n    goNextPage,\r\n    goPrevPage,\r\n    amountOfPages,\r\n  };\r\n};\r\n","import { Navigate } from \"react-router\";\r\n\r\nimport useSpreadContext from \"../customHooks/useSpreadContext\";\r\n\r\nconst PrivateRoute: React.FC<any> = ({ children }) => {\r\n  const { userToken } = useSpreadContext();\r\n\r\n  if (!userToken) return <Navigate to=\"/login\" />;\r\n\r\n  return children;\r\n};\r\n\r\nexport default PrivateRoute;\r\n","import { Navigate } from \"react-router\";\r\n\r\nimport useSpreadContext from \"../customHooks/useSpreadContext\";\r\n\r\ninterface Props {\r\n  children: JSX.Element;\r\n}\r\n\r\nconst PublicRoute: React.FC<Props> = ({ children }) => {\r\n  const { userToken } = useSpreadContext();\r\n\r\n  if (userToken) return <Navigate to=\"/\" />;\r\n\r\n  return children;\r\n};\r\n\r\nexport default PublicRoute;\r\n","import {\r\n  HashRouter as Router,\r\n  Routes,\r\n  Route,\r\n  Navigate,\r\n} from \"react-router-dom\";\r\nimport Navbar from \"../components/Navbar/Navbar\";\r\nimport HeroDetailScreen from \"../views/HeroDetailScreen/HeroDetailScreen\";\r\nimport HomeScreen from \"../views/HomeScreen/HomeScreen\";\r\n\r\nimport LoginScreen from \"../views/LoginScreen/LoginScreen\";\r\nimport SearchScreen from \"../views/SearchScreen/SearchScreen\";\r\n\r\nimport PrivateRoute from \"./PrivateRoute\";\r\nimport PublicRoute from \"./PublicRoute\";\r\n\r\nconst AppRouter = () => {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route\r\n          path=\"/login\"\r\n          element={\r\n            <PublicRoute>\r\n              <LoginScreen />\r\n            </PublicRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/search\"\r\n          element={\r\n            <PrivateRoute>\r\n              <SearchScreen />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/hero/:id\"\r\n          element={\r\n            <PrivateRoute>\r\n              <HeroDetailScreen />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route\r\n          path=\"/\"\r\n          element={\r\n            <PrivateRoute>\r\n              <HomeScreen />\r\n            </PrivateRoute>\r\n          }\r\n        />\r\n        <Route path=\"*\" element={<Navigate to=\"/\" />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n};\r\n\r\nexport default AppRouter;\r\n","import { AuthProvider } from \"./authProvider/AuthProvider\";\nimport { HeroesProvider } from \"./heroesProvider/HeroesProvider\";\nimport AppRouter from \"./router/AppRouter\";\nimport { positions, Provider as AlertProvider } from \"react-alert\";\nimport AlertTemplate from \"react-alert-template-basic\";\n\nfunction App() {\n  const options = {\n    timeout: 5000,\n    position: positions.TOP_CENTER,\n  };\n\n  return (\n    <AuthProvider>\n      <HeroesProvider>\n        <AlertProvider template={AlertTemplate} {...options}>\n          <AppRouter />\n        </AlertProvider>\n      </HeroesProvider>\n    </AuthProvider>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"bootstrap/dist/css/bootstrap.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}